<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 通过构造器参数索引方式依赖注入 -->
    <bean id="byIndex" class="com.adeng.spring.demo.di.HelloImpl3">
        <constructor-arg index="0" value="Hello World!"/>
        <constructor-arg index="1" value="1"/>
    </bean>

    <!-- 通过构造器参数类型方式依赖注入 -->
    <bean id="byType" class="com.adeng.spring.demo.di.HelloImpl3">
        <constructor-arg type="java.lang.String" value="Hello World!"/>
        <constructor-arg type="int" value="2"/>
    </bean>

    <!-- 通过构造器参数名称方式依赖注入 -->
    <bean id="byName" class="com.adeng.spring.demo.di.HelloImpl3">
        <constructor-arg name="message" value="Hello World!"/>
        <constructor-arg name="index" value="3"/>
    </bean>

    <bean id="byStaticFactory" class="com.adeng.spring.demo.di.DependencyInjectByStaticFactory" factory-method="newInstance">
        <constructor-arg index="0" value="Hello World!"/>
        <constructor-arg index="1" value="4"/>
    </bean>

    <!-- 实例工厂Bean -->
    <bean id="instanceFactory"
          class="com.adeng.spring.demo.di.DependencyInjectByInstanceFactory"/>

    <bean id="byInstanceFactory" factory-bean="instanceFactory" factory-method="newInstance">
        <constructor-arg index="0" value="Hello World!"/>
        <constructor-arg index="1" value="5"/>
    </bean>

    <!-- 通过setter方式进行依赖注入 -->
    <bean id="setterBean" class="com.adeng.spring.demo.di.HelloImpl4">
        <property name="message" value="Hello World!"/>
        <property name="index">
            <value>6</value>
        </property>
    </bean>

    <!-- 查找方法注入：又称为Lookup方法注入，用于注入方法返回结果 -->
    <bean id="prototypePrinter"
          class="com.adeng.spring.demo.di.Printer" scope="prototype"/>

    <bean id="singletonPrinter"
          class="com.adeng.spring.demo.di.Printer" scope="singleton"/>

    <bean id="helloImpl51" class="com.adeng.spring.demo.di.HelloImpl5" scope="singleton">
        <property name="printer" ref="prototypePrinter"/>
        <lookup-method name="createPrototypePrinter" bean="prototypePrinter"/>
        <lookup-method name="createSingletonPrinter" bean="singletonPrinter"/>
    </bean>

    <bean id="helloImpl52" class="com.adeng.spring.demo.di.HelloImpl5" scope="prototype">
        <property name="printer" ref="prototypePrinter"/>
        <lookup-method name="createPrototypePrinter" bean="prototypePrinter"/>
        <lookup-method name="createSingletonPrinter" bean="singletonPrinter"/>
    </bean>

    <!-- 替换方法注入：也叫“MethodReplacer”注入，和查找注入方法不一样的是，他主要用来替换方法体。通过首先定义一个MethodReplacer接口实现 -->
    <bean id="replacer" class="com.adeng.spring.demo.di.PrinterReplacer"/>

    <bean id="printer" class="com.adeng.spring.demo.di.Printer">
        <replaced-method name="print" replacer="replacer">
            <arg-type>java.lang.String</arg-type>
        </replaced-method>
    </bean>

</beans>